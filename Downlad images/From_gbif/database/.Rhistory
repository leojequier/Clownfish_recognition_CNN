a %*% t(a)
a = c(7,10,13)
a %*% t(a)
a = matrix(c(7,10,13), ncol = 3)
a %*% t(a)
aat = a %*% t(a)
aat/3
var(a)
var(as.array(a))
a = matrix(c(7,10,13), ncol = 3)
aat = a %*% t(a)
aat/3
var(as.array(a[1,]))
t(a)
a
aat = a %*% t(a)
aat
aat/2
a = matrix(c(7,10,13) -mean(c(7,10,13)), ncol = 3)
aat = a %*% t(a)
aat/2
var(as.array(a[1,]))
sigmoid = function(i1, w1, b1, i2, w2, b2){
out = 1/(1+e**(sum(i1 * w1 - b1, i2 * w2 -b2)))
return(out)
}
sigmoid(1,2,3,0,2,3)
out = 1/(1+exp(sum(i1 * w1 - b1, i2 * w2 -b2)))
return(out)
sigmoid = function(i1, w1, b1, i2, w2, b2){
out = 1/(1+exp(sum(i1 * w1 - b1, i2 * w2 -b2)))
return(out)
}
sigmoid(1,2,3,0,2,3)
sigmoid(1,-2,3,0,-2,3)
out = 1/(1+exp(-sum(i1 * w1 - b1, i2 * w2 -b2)))
sigmoid = function(i1, w1, b1, i2, w2, b2){
out = 1/(1+exp(-sum(i1 * w1 - b1, i2 * w2 -b2)))
return(out)
}
sigmoid(1,-2,3,0,-2,3)
sigmoid(0,-2,3,0,-2,3)
sigmoid(0,-2,3,0.002472623,-2,3)
sigmoid(0.002472623,-2,3,0.002472623,-2,3)
sigmoid(1,-2,3,0,-2,3)
sigmoid(1,-2,3,0.0003353501,-2,3)
sigmoid(0,-2,3,0.0003353501,-2,3)
sigmoid(0.002470969,-2,3,0.0003353501,-2,3)
sigmoid(1,-2,3,1,-2,3)
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR()
install.packages("ISWR")
install.packages(‘ISwR’)
install.packages("ISwR")
library(ISwR)
data("hellung")
plot(hellung$diameter, hellung$conc, xlab="Diameter", ylab="Concentration")
model <- lm(conc ~ diameter, data=hellung)
plot(hellung$diameter, hellung$conc, xlab="Diameter", ylab="Concentration")
abline(model)
modellog <- lm(logconc ~ diameter, data=hellung)
model <- lm(conc ~ diameter, data=hellung)
plot(hellung$diameter, hellung$conc, xlab="Diameter", ylab="Concentration")
abline(model)
summary(model)
hellung$logconc <- log(hellung$conc)
plot(hellung$diameter, hellung$logconc, xlab="Diameter", ylab="log(concentration)")
setwd("C:/Users/leoje/Dropbox/uni/unil semestre 7/Data analysis")
library(ISwR)
install.packages("ISWR")
install.packages("ISwR")
library(ISwR)
data("hellung")
plot(hellung$diameter, hellung$conc, xlab="Diameter", ylab="Concentration")
model <- lm(conc ~ diameter, data=hellung)
plot(hellung$diameter, hellung$conc, xlab="Diameter", ylab="Concentration")
abline(model)
summary(model)
modellog <- lm(logconc ~ diameter, data=hellung)
hellung$logconc <- log(hellung$conc)
plot(hellung$diameter, hellung$logconc, xlab="Diameter", ylab="log(concentration)")
modellog <- lm(logconc ~ diameter, data=hellung)
plot(hellung$diameter, hellung$logconc, xlab="Diameter", ylab="log(concentration)")
abline(modellog)
summary(modellog)
plot(hellung$diameter[hellung$glucose == 2], hellung$conc[hellung$glucose == 2], xlab="Diameter", ylab="concentration", col="red", xlim=c(min(hellung$diameter),max(hellung$diameter)) , ylim=c(min(hellung$conc),max(hellung$conc)))
points(hellung$diameter[hellung$glucose == 1], hellung$conc[hellung$glucose == 1], col="blue")
modellog <- lm(logconc ~ glucose + diameter, data=hellung)
plot(hellung$diameter[hellung$glucose == 2], log(hellung$conc[hellung$glucose == 2]), xlab="Diameter", ylab="concentration", col="red", xlim=c(min(hellung$diameter),max(hellung$diameter)) , ylim=c(min(log(hellung$conc)),max(log(hellung$conc))))
points(hellung$diameter[hellung$glucose == 1], log(hellung$conc[hellung$glucose == 1]), col="blue")
summary(modellog)
knitr::opts_chunk$set(echo = TRUE)
michelin = read.table("MichelinFood.txt", header = T)
summary(michelin)
plot(michelin$Food , michelin$proportion)
glm.mich <- glm(cbind(InMichelin, NotInMichelin) ~ Food,
family = binomial(logit), data = michelin)
summary(glm.mich)
1 - pchisq(deviance(glm.mich), df.residual(glm.mich))
summary(michelin)
setwd("~/nemo/From_gbif/database")
data = read.table("final_data.csv", sep = ";", header = T)
1350 + 902
anova(glm.mich, test = "Chisq")
